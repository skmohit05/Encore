<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-5.4.xsd">

    <!-- Auto scan the components -->
    <context:component-scan base-package="com.healthcare.encore.security" />

    <!--
    Creates custom authentication provider and sets it to global authentication
    manager. This will be used by both the batch and webservice calls.
    REST API project will have additional http authentication configuration.

    UserAccountDetailService makes use of UserDAO to get user information
    from database. This is wired along with the role hierarchy to form
    the custom authentication provider
    -->

    <security:authentication-manager>
        <security:authentication-provider ref="customAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="userAccountAuthenticationProvider"
        class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userAccountDetailService" />
        <property name="authoritiesMapper" ref="authoritiesMapper" />
        <property name="passwordEncoder" ref="customPasswordEncoder" />
    </bean>
    
    <bean id="authoritiesMapper" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
    	<constructor-arg ref="roleHierarchy"/>
    </bean>
    
    <bean id="roleHierarchy"
        class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
	            ROLE_ADMIN > ROLE_EMPLOYER
	            ROLE_EMPLOYER > ROLE_JOBSEEKER
            </value>
        </property>
    </bean>

    <bean id="encoder"
        class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </bean>

    <!-- Enable Annotation security configuration -->
    <security:global-method-security pre-post-annotations="enabled" />
</beans>
