<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <bean id="db.generalPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
                <value>file:./database.properties</value>
            </list>
        </property>
        <property name="placeholderPrefix" value="$db{" />
        <property name="placeholderSuffix" value="}" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    </bean>

    <!-- Hibernate properties that can be overridden, has to be configured in application.properties -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</prop>
                <prop key="hibernate.connection.url">#{'jdbc:mysql://' + '$db{encoredb.server}' + '/' + '$db{encoredb.dbname}'}</prop>
                <prop key="hibernate.connection.username">$db{encoredb.username}</prop>
                <prop key="hibernate.connection.password">$db{encoredb.password}</prop>

                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- <prop key="hibernate.default_schema">dbo</prop> -->
                
                <prop key="hibernate.legacy_limit_handler">true</prop>

                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size:1000}</prop>
                <!--  Do not enable this when using Spring to control sessions/transactions
                <prop key="hibernate.current_session_context_class">thread</prop>
                -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.connection.provider_class">org.hibernate.c3p0.internal.C3P0ConnectionProvider</prop>
                <prop key="hibernate.c3p0.min_size">${hibernate.c3p0.min_size:5}</prop>
                <prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size:50}</prop>
                <prop key="hibernate.c3p0.timeout">${hibernate.c3p0.timeout:300}</prop>
                <prop key="hibernate.c3p0.max_statements">${hibernate.c3p0.max_statements:50}</prop>
                <prop key="hibernate.c3p0.idle_test_period">${hibernate.c3p0.idle_test_period:3000}</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.healthcare.encore.db.dto</value>
                <value>com.healthcate.encore.db.dao.hibernate.converter</value>
            </list>
        </property>
    </bean>

    <bean id="auditInfoInterceptor" class="com.healthcare.encore.db.dao.hibernate.interceptor.AuditInterceptor" />

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="entityInterceptor" ref="auditInfoInterceptor" />
    </bean>

    <tx:annotation-driven />

</beans>
